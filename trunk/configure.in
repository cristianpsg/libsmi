#
# configure.in --
#
#      Process this file with autoconf to produce a configure script.
#
# Copyright (c) 1999 Frank Strauss, Technical University of Braunschweig.
#
# See the file "COPYING" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @(#) $Id: configure.in,v 1.78 2000/11/12 17:46:37 strauss Exp $
#

AC_INIT(tools/smilint.c)

LIBSMI_MAJOR=0
LIBSMI_MINOR=2
LIBSMI_PATCHLEVEL=8
LIBTOOL_VERSION=2	# increment, when MAJOR and/or MINOR changes
LIBTOOL_REVISION=8	# increment, when PATCHLEVEL changes
LIBTOOL_AGE=0

VERSION_STRING="$LIBSMI_MAJOR.$LIBSMI_MINOR.$LIBSMI_PATCHLEVEL"
VERSION_LIBTOOL="$LIBTOOL_VERSION:$LIBTOOL_REVISION:$LIBTOOL_AGE"

AM_INIT_AUTOMAKE(libsmi,$VERSION_STRING)
AM_CONFIG_HEADER(config.h)

AC_DEFINE(BACKEND_SMI)
AC_DEFINE(BACKEND_SMING)

AC_DEFINE(MAX_LEX_DEPTH, 30)
AC_DEFINE(DEFAULT_ERRORLEVEL, 3)

AC_ARG_WITH(cflags,
[  --with-cflags=FLAGS     use FLAGS for CFLAGS],
CFLAGS="$withval")

AC_PROG_CC
AC_ARG_WITH(cc,
[  --with-cc=CC            use CC as the C compiler],
CC="$withval")

AC_MSG_CHECKING([for additional required compiler flags])
AC_TRY_RUN([#include <stdio.h>
  main() {
  #ifdef __SUNPRO_C
        exit(0);
  #else
        exit(1);
  #endif
  }
], ADDCFLAGS="-DYY_USE_PROTOS", ADDCFLAGS="", ADDCFLAGS="")
echo $ADDCFLAGS
CFLAGS="$CFLAGS $ADDCFLAGS"

AC_CHECK_FUNCS(strtoll strtoull strtoq strtouq)

AC_CHECK_FUNCS(timegm)

AC_CHECK_FUNCS(vsnprintf snprintf)

AC_CHECK_HEADERS(getopt.h pwd.h unistd.h)

if test "x$prefix" = "xNONE" ; then
  prefix=/usr/local
fi

AC_ARG_WITH(mibdir,
[  --with-mibdir=DIR       use DIR to install libsmi MIB modules [DATADIR/mibs]],
mibdir="$withval", mibdir="$prefix/share/mibs")

AC_ARG_WITH(smipath,
[  --with-smipath=DIR:DIR  default DIRs to search for MIB modules [MIBDIR...]],
smipath="$withval", smipath="$mibdir/ietf:$mibdir/iana:$mibdir/irtf:$mibdir/site:$mibdir/tubs")
AC_DEFINE_UNQUOTED(DEFAULT_SMIPATH, "$smipath")

AC_ARG_WITH(pathseparator,
[  --with-pathseparator=C  use C as the path separator [: on UNIX, ; on WIN32]],
pathseparator="$withval", pathseparator="")

AC_MSG_CHECKING([for path separator character])
if test "$pathseparator" = "" ; then
  AC_TRY_RUN([#include <stdio.h>
    main() {
    #ifdef _WIN32
	  exit(0);
    #else
	  exit(1);
    #endif
    }
  ], pathseparator=";", pathseparator=":", pathseparator=":")
fi
echo $pathseparator

AC_DEFINE_UNQUOTED(PATH_SEPARATOR, '$pathseparator')


AC_MSG_CHECKING([for 64 bit types])
AC_TRY_RUN([#include <stdio.h>
  main() {
      long long ll;
      unsigned long long ull;
      exit(0);
  }
], 
    uint64_type="unsigned long long"; int64_type="long long";
    uint64_format="%llu"; int64_format="%lld",
    uint64_max="18446744073709551615ULL";
    int64_min="-9223372036854775808LL"; int64_max="9223372036854775807LL";
    uint64_type="unsigned long"; int64_type="long";
    uint64_format="%lu"; int64_format="%ld",
    uint64_max="4294967295";
    int64_min="-2147483648"; int64_max="2147483647";
    uint64_type="unsigned long long"; int64_type="long long";
    uint64_format="%llu"; int64_format="%lld")
    uint64_max="18446744073709551615ULL";
    int64_min="-9223372036854775808LL"; int64_max="9223372036854775807LL";
echo $int64_type/$int64_format, etc.

AC_DEFINE_UNQUOTED(UINT64_TYPE, $uint64_type)
AC_DEFINE_UNQUOTED(INT64_TYPE, $int64_type)
AC_DEFINE_UNQUOTED(UINT64_FORMAT, "$uint64_format")
AC_DEFINE_UNQUOTED(INT64_FORMAT, "$int64_format")
AC_DEFINE_UNQUOTED(UINT64_MAX, $uint64_max)
AC_DEFINE_UNQUOTED(INT64_MIN, $int64_min)
AC_DEFINE_UNQUOTED(INT64_MAX, $int64_max)


AC_ARG_ENABLE(dmalloc,
[  --enable-dmalloc        enable dmalloc debugging (www.dmalloc.com)],
LIBS="$LIBS -ldmalloc"
AC_DEFINE(HAVE_DMALLOC_H))

AC_ARG_ENABLE(smi,
[  --enable-smi            enable SMIv1/v2 parser support],
AC_DEFINE(BACKEND_SMI))

AC_ARG_ENABLE(sming,
[  --enable-sming          enable SMIng parser support],
AC_DEFINE(BACKEND_SMING))

AC_PATH_PROG(FLEX, "flex")
if test -z "${FLEX}" ; then
  echo "NOTE: We will not be able to build scanner C code from flex sources."
fi

AC_PATH_PROG(BISON, "bison")
if test -z "${BISON}" ; then
  echo "NOTE: We will not be able to build parser C code from bison sources."
fi

AC_PATH_PROG(BASH, "bash")
AC_PATH_PROG(SH, "sh")
AC_PATH_PROG(AWK, awk)

AC_PATH_PROGS(DIFF, gdiff diff)
$DIFF --version 2>&1 >/dev/null
if test $? -eq 0 ; then
	DIFF="$DIFF --ignore-matching-lines='generated by smidump' --ignore-matching-lines='\$Id.*\$'"
fi

AC_EXEEXT
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AM_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

AC_DEFINE_UNQUOTED(DEFAULT_GLOBALCONFIG, "${prefix}/etc/smi.conf")
AC_DEFINE(DEFAULT_USERCONFIG, ".smirc")

if ${CONFIG_SHELL} ./libtool --features | grep "enable static" >/dev/null; then
  STATIC=-static
else
  STATIC=
fi
AC_SUBST(STATIC)

AC_SUBST(LIBSMI_MAJOR)
AC_SUBST(LIBSMI_MINOR)
AC_SUBST(LIBSMI_PATCHLEVEL)
AC_SUBST(LIBTOOL_VERSION)
AC_SUBST(LIBTOOL_REVISION)
AC_SUBST(LIBTOOL_AGE)
AC_SUBST(VERSION_STRING)
AC_SUBST(VERSION_LIBTOOL)

AC_SUBST(EXEEXT)
AC_SUBST(BASH)
AC_SUBST(SH)
AC_SUBST(AWK)
AC_SUBST(DIFF)
AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(mibdir)
AC_SUBST(smipath)

AC_OUTPUT(Makefile lib/Makefile tools/Makefile mibs/Makefile mibs/iana/Makefile mibs/ietf/Makefile mibs/irtf/Makefile mibs/tubs/Makefile mibs/site/Makefile test/Makefile test/mibs/Makefile test/dumps/Makefile doc/Makefile lib/smi.h lib/libsmi.3 lib/smi_macro.3 lib/smi_module.3 lib/smi_node.3 lib/smi_type.3 lib/smi_config.3 tools/smistrip tools/smiquery.1 tools/smilint.1 tools/smidump.1 tools/smistrip.1 test/parser.test test/smidump-corba.test test/smidump-jax.test test/smidump-imports.test test/smidump-mosy.test test/smidump-orig-smiv2.test test/smidump-sming.test test/smidump-smiv1.test test/smidump-smiv2-smiv2.test test/smidump-smiv2.test test/smidump-tree.test test/smidump-types.test test/smilint-smiv2.test, chmod a+x test/parser.test test/smidump-corba.test test/smidump-jax.test test/smidump-imports.test test/smidump-mosy.test test/smidump-orig-smiv2.test test/smidump-sming.test test/smidump-smiv1.test test/smidump-smiv2-smiv2.test test/smidump-smiv2.test test/smidump-tree.test test/smidump-types.test test/smilint-smiv2.test)
