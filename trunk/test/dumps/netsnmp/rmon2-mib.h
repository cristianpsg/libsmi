/*
 * This C header file has been generated by smidump 0.2.10.
 * It is intended to be used with the NET SNMP agent.
 *
 * This header is derived from the RMON2-MIB module.
 *
 * $Id$
 */

#ifndef _RMON2_MIB_H_
#define _RMON2_MIB_H_

#include <stdlib.h>

#ifdef HAVE_STDINT_H
#include <stdint.h>
#endif

/*
 * Initialization function:
 */

void init_rmon2_mib(void);

/*
 * Structures for groups of scalars and table entries:
 */

typedef struct etherStats2Entry {
    uint32_t  etherStatsDroppedFrames;
    uint32_t  etherStatsCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct etherStats2Entry *_nextPtr;	/* pointer to next table entry */
} etherStats2Entry_t;

extern int
read_etherStats2Entry(etherStats2Entry_t *etherStats2Entry);

extern int
register_etherStats2Entry();

typedef struct tokenRingMLStats2Entry {
    uint32_t  tokenRingMLStatsDroppedFrames;
    uint32_t  tokenRingMLStatsCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct tokenRingMLStats2Entry *_nextPtr;	/* pointer to next table entry */
} tokenRingMLStats2Entry_t;

extern int
read_tokenRingMLStats2Entry(tokenRingMLStats2Entry_t *tokenRingMLStats2Entry);

extern int
register_tokenRingMLStats2Entry();

typedef struct tokenRingPStats2Entry {
    uint32_t  tokenRingPStatsDroppedFrames;
    uint32_t  tokenRingPStatsCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct tokenRingPStats2Entry *_nextPtr;	/* pointer to next table entry */
} tokenRingPStats2Entry_t;

extern int
read_tokenRingPStats2Entry(tokenRingPStats2Entry_t *tokenRingPStats2Entry);

extern int
register_tokenRingPStats2Entry();

typedef struct historyControl2Entry {
    uint32_t  historyControlDroppedFrames;
    void      *_clientData;		/* pointer to client data structure */
    struct historyControl2Entry *_nextPtr;	/* pointer to next table entry */
} historyControl2Entry_t;

extern int
read_historyControl2Entry(historyControl2Entry_t *historyControl2Entry);

extern int
register_historyControl2Entry();

typedef struct hostControl2Entry {
    uint32_t  hostControlDroppedFrames;
    uint32_t  hostControlCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct hostControl2Entry *_nextPtr;	/* pointer to next table entry */
} hostControl2Entry_t;

extern int
read_hostControl2Entry(hostControl2Entry_t *hostControl2Entry);

extern int
register_hostControl2Entry();

typedef struct matrixControl2Entry {
    uint32_t  matrixControlDroppedFrames;
    uint32_t  matrixControlCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct matrixControl2Entry *_nextPtr;	/* pointer to next table entry */
} matrixControl2Entry_t;

extern int
read_matrixControl2Entry(matrixControl2Entry_t *matrixControl2Entry);

extern int
register_matrixControl2Entry();

typedef struct channel2Entry {
    uint32_t  channelDroppedFrames;
    uint32_t  channelCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct channel2Entry *_nextPtr;	/* pointer to next table entry */
} channel2Entry_t;

extern int
read_channel2Entry(channel2Entry_t *channel2Entry);

extern int
register_channel2Entry();

typedef struct filter2Entry {
    int32_t   filterProtocolDirDataLocalIndex;
    int32_t   filterProtocolDirLocalIndex;
    void      *_clientData;		/* pointer to client data structure */
    struct filter2Entry *_nextPtr;	/* pointer to next table entry */
} filter2Entry_t;

extern int
read_filter2Entry(filter2Entry_t *filter2Entry);

extern int
register_filter2Entry();

typedef struct ringStationControl2Entry {
    uint32_t  ringStationControlDroppedFrames;
    uint32_t  ringStationControlCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct ringStationControl2Entry *_nextPtr;	/* pointer to next table entry */
} ringStationControl2Entry_t;

extern int
read_ringStationControl2Entry(ringStationControl2Entry_t *ringStationControl2Entry);

extern int
register_ringStationControl2Entry();

typedef struct sourceRoutingStats2Entry {
    uint32_t  sourceRoutingStatsDroppedFrames;
    uint32_t  sourceRoutingStatsCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct sourceRoutingStats2Entry *_nextPtr;	/* pointer to next table entry */
} sourceRoutingStats2Entry_t;

extern int
read_sourceRoutingStats2Entry(sourceRoutingStats2Entry_t *sourceRoutingStats2Entry);

extern int
register_sourceRoutingStats2Entry();

typedef struct protocolDir {
    uint32_t  protocolDirLastChange;
    void      *_clientData;		/* pointer to client data structure */
} protocolDir_t;

extern int
read_protocolDir(protocolDir_t *protocolDir);

extern int
register_protocolDir();

typedef struct protocolDirEntry {
    u_char    protocolDirID[65535];
    size_t    _protocolDirIDLength;
    u_char    protocolDirParameters[65535];
    size_t    _protocolDirParametersLength;
    int32_t   protocolDirLocalIndex;
    u_char    protocolDirDescr[64];
    size_t    _protocolDirDescrLength;
    u_char    protocolDirType[1];
    size_t    _protocolDirTypeLength;
    int32_t   protocolDirAddressMapConfig;
    int32_t   protocolDirHostConfig;
    int32_t   protocolDirMatrixConfig;
    u_char    protocolDirOwner[127];
    size_t    _protocolDirOwnerLength;
    int32_t   protocolDirStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct protocolDirEntry *_nextPtr;	/* pointer to next table entry */
} protocolDirEntry_t;

extern int
read_protocolDirEntry(protocolDirEntry_t *protocolDirEntry);

extern int
register_protocolDirEntry();

typedef struct protocolDistControlEntry {
    int32_t   protocolDistControlIndex;
    uint32_t  protocolDistControlDataSource[128];
    size_t    _protocolDistControlDataSourceLength;
    uint32_t  protocolDistControlDroppedFrames;
    uint32_t  protocolDistControlCreateTime;
    u_char    protocolDistControlOwner[127];
    size_t    _protocolDistControlOwnerLength;
    int32_t   protocolDistControlStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct protocolDistControlEntry *_nextPtr;	/* pointer to next table entry */
} protocolDistControlEntry_t;

extern int
read_protocolDistControlEntry(protocolDistControlEntry_t *protocolDistControlEntry);

extern int
register_protocolDistControlEntry();

typedef struct protocolDistStatsEntry {
    uint32_t  protocolDistStatsPkts;
    uint32_t  protocolDistStatsOctets;
    void      *_clientData;		/* pointer to client data structure */
    struct protocolDistStatsEntry *_nextPtr;	/* pointer to next table entry */
} protocolDistStatsEntry_t;

extern int
read_protocolDistStatsEntry(protocolDistStatsEntry_t *protocolDistStatsEntry);

extern int
register_protocolDistStatsEntry();

typedef struct addressMap {
    uint32_t  addressMapInserts;
    uint32_t  addressMapDeletes;
    int32_t   addressMapMaxDesiredEntries;
    void      *_clientData;		/* pointer to client data structure */
} addressMap_t;

extern int
read_addressMap(addressMap_t *addressMap);

extern int
register_addressMap();

typedef struct addressMapControlEntry {
    int32_t   addressMapControlIndex;
    uint32_t  addressMapControlDataSource[128];
    size_t    _addressMapControlDataSourceLength;
    uint32_t  addressMapControlDroppedFrames;
    u_char    addressMapControlOwner[127];
    size_t    _addressMapControlOwnerLength;
    int32_t   addressMapControlStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct addressMapControlEntry *_nextPtr;	/* pointer to next table entry */
} addressMapControlEntry_t;

extern int
read_addressMapControlEntry(addressMapControlEntry_t *addressMapControlEntry);

extern int
register_addressMapControlEntry();

typedef struct addressMapEntry {
    uint32_t  addressMapTimeMark;
    u_char    addressMapNetworkAddress[65535];
    size_t    _addressMapNetworkAddressLength;
    uint32_t  addressMapSource[128];
    size_t    _addressMapSourceLength;
    u_char    addressMapPhysicalAddress[65535];
    size_t    _addressMapPhysicalAddressLength;
    uint32_t  addressMapLastChange;
    void      *_clientData;		/* pointer to client data structure */
    struct addressMapEntry *_nextPtr;	/* pointer to next table entry */
} addressMapEntry_t;

extern int
read_addressMapEntry(addressMapEntry_t *addressMapEntry);

extern int
register_addressMapEntry();

typedef struct hlHostControlEntry {
    int32_t   hlHostControlIndex;
    uint32_t  hlHostControlDataSource[128];
    size_t    _hlHostControlDataSourceLength;
    uint32_t  hlHostControlNlDroppedFrames;
    uint32_t  hlHostControlNlInserts;
    uint32_t  hlHostControlNlDeletes;
    int32_t   hlHostControlNlMaxDesiredEntries;
    uint32_t  hlHostControlAlDroppedFrames;
    uint32_t  hlHostControlAlInserts;
    uint32_t  hlHostControlAlDeletes;
    int32_t   hlHostControlAlMaxDesiredEntries;
    u_char    hlHostControlOwner[127];
    size_t    _hlHostControlOwnerLength;
    int32_t   hlHostControlStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct hlHostControlEntry *_nextPtr;	/* pointer to next table entry */
} hlHostControlEntry_t;

extern int
read_hlHostControlEntry(hlHostControlEntry_t *hlHostControlEntry);

extern int
register_hlHostControlEntry();

typedef struct nlHostEntry {
    uint32_t  nlHostTimeMark;
    u_char    nlHostAddress[65535];
    size_t    _nlHostAddressLength;
    uint32_t  nlHostInPkts;
    uint32_t  nlHostOutPkts;
    uint32_t  nlHostInOctets;
    uint32_t  nlHostOutOctets;
    uint32_t  nlHostOutMacNonUnicastPkts;
    uint32_t  nlHostCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct nlHostEntry *_nextPtr;	/* pointer to next table entry */
} nlHostEntry_t;

extern int
read_nlHostEntry(nlHostEntry_t *nlHostEntry);

extern int
register_nlHostEntry();

typedef struct hlMatrixControlEntry {
    int32_t   hlMatrixControlIndex;
    uint32_t  hlMatrixControlDataSource[128];
    size_t    _hlMatrixControlDataSourceLength;
    uint32_t  hlMatrixControlNlDroppedFrames;
    uint32_t  hlMatrixControlNlInserts;
    uint32_t  hlMatrixControlNlDeletes;
    int32_t   hlMatrixControlNlMaxDesiredEntries;
    uint32_t  hlMatrixControlAlDroppedFrames;
    uint32_t  hlMatrixControlAlInserts;
    uint32_t  hlMatrixControlAlDeletes;
    int32_t   hlMatrixControlAlMaxDesiredEntries;
    u_char    hlMatrixControlOwner[127];
    size_t    _hlMatrixControlOwnerLength;
    int32_t   hlMatrixControlStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct hlMatrixControlEntry *_nextPtr;	/* pointer to next table entry */
} hlMatrixControlEntry_t;

extern int
read_hlMatrixControlEntry(hlMatrixControlEntry_t *hlMatrixControlEntry);

extern int
register_hlMatrixControlEntry();

typedef struct nlMatrixSDEntry {
    uint32_t  nlMatrixSDTimeMark;
    u_char    nlMatrixSDSourceAddress[65535];
    size_t    _nlMatrixSDSourceAddressLength;
    u_char    nlMatrixSDDestAddress[65535];
    size_t    _nlMatrixSDDestAddressLength;
    uint32_t  nlMatrixSDPkts;
    uint32_t  nlMatrixSDOctets;
    uint32_t  nlMatrixSDCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct nlMatrixSDEntry *_nextPtr;	/* pointer to next table entry */
} nlMatrixSDEntry_t;

extern int
read_nlMatrixSDEntry(nlMatrixSDEntry_t *nlMatrixSDEntry);

extern int
register_nlMatrixSDEntry();

typedef struct nlMatrixDSEntry {
    uint32_t  nlMatrixDSTimeMark;
    u_char    nlMatrixDSSourceAddress[65535];
    size_t    _nlMatrixDSSourceAddressLength;
    u_char    nlMatrixDSDestAddress[65535];
    size_t    _nlMatrixDSDestAddressLength;
    uint32_t  nlMatrixDSPkts;
    uint32_t  nlMatrixDSOctets;
    uint32_t  nlMatrixDSCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct nlMatrixDSEntry *_nextPtr;	/* pointer to next table entry */
} nlMatrixDSEntry_t;

extern int
read_nlMatrixDSEntry(nlMatrixDSEntry_t *nlMatrixDSEntry);

extern int
register_nlMatrixDSEntry();

typedef struct nlMatrixTopNControlEntry {
    int32_t   nlMatrixTopNControlIndex;
    int32_t   nlMatrixTopNControlMatrixIndex;
    int32_t   nlMatrixTopNControlRateBase;
    int32_t   nlMatrixTopNControlTimeRemaining;
    uint32_t  nlMatrixTopNControlGeneratedReports;
    int32_t   nlMatrixTopNControlDuration;
    int32_t   nlMatrixTopNControlRequestedSize;
    int32_t   nlMatrixTopNControlGrantedSize;
    uint32_t  nlMatrixTopNControlStartTime;
    u_char    nlMatrixTopNControlOwner[127];
    size_t    _nlMatrixTopNControlOwnerLength;
    int32_t   nlMatrixTopNControlStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct nlMatrixTopNControlEntry *_nextPtr;	/* pointer to next table entry */
} nlMatrixTopNControlEntry_t;

extern int
read_nlMatrixTopNControlEntry(nlMatrixTopNControlEntry_t *nlMatrixTopNControlEntry);

extern int
register_nlMatrixTopNControlEntry();

typedef struct nlMatrixTopNEntry {
    int32_t   nlMatrixTopNIndex;
    int32_t   nlMatrixTopNProtocolDirLocalIndex;
    u_char    nlMatrixTopNSourceAddress[65535];
    size_t    _nlMatrixTopNSourceAddressLength;
    u_char    nlMatrixTopNDestAddress[65535];
    size_t    _nlMatrixTopNDestAddressLength;
    uint32_t  nlMatrixTopNPktRate;
    uint32_t  nlMatrixTopNReversePktRate;
    uint32_t  nlMatrixTopNOctetRate;
    uint32_t  nlMatrixTopNReverseOctetRate;
    void      *_clientData;		/* pointer to client data structure */
    struct nlMatrixTopNEntry *_nextPtr;	/* pointer to next table entry */
} nlMatrixTopNEntry_t;

extern int
read_nlMatrixTopNEntry(nlMatrixTopNEntry_t *nlMatrixTopNEntry);

extern int
register_nlMatrixTopNEntry();

typedef struct alHostEntry {
    uint32_t  alHostTimeMark;
    uint32_t  alHostInPkts;
    uint32_t  alHostOutPkts;
    uint32_t  alHostInOctets;
    uint32_t  alHostOutOctets;
    uint32_t  alHostCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct alHostEntry *_nextPtr;	/* pointer to next table entry */
} alHostEntry_t;

extern int
read_alHostEntry(alHostEntry_t *alHostEntry);

extern int
register_alHostEntry();

typedef struct alMatrixSDEntry {
    uint32_t  alMatrixSDTimeMark;
    uint32_t  alMatrixSDPkts;
    uint32_t  alMatrixSDOctets;
    uint32_t  alMatrixSDCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct alMatrixSDEntry *_nextPtr;	/* pointer to next table entry */
} alMatrixSDEntry_t;

extern int
read_alMatrixSDEntry(alMatrixSDEntry_t *alMatrixSDEntry);

extern int
register_alMatrixSDEntry();

typedef struct alMatrixDSEntry {
    uint32_t  alMatrixDSTimeMark;
    uint32_t  alMatrixDSPkts;
    uint32_t  alMatrixDSOctets;
    uint32_t  alMatrixDSCreateTime;
    void      *_clientData;		/* pointer to client data structure */
    struct alMatrixDSEntry *_nextPtr;	/* pointer to next table entry */
} alMatrixDSEntry_t;

extern int
read_alMatrixDSEntry(alMatrixDSEntry_t *alMatrixDSEntry);

extern int
register_alMatrixDSEntry();

typedef struct alMatrixTopNControlEntry {
    int32_t   alMatrixTopNControlIndex;
    int32_t   alMatrixTopNControlMatrixIndex;
    int32_t   alMatrixTopNControlRateBase;
    int32_t   alMatrixTopNControlTimeRemaining;
    uint32_t  alMatrixTopNControlGeneratedReports;
    int32_t   alMatrixTopNControlDuration;
    int32_t   alMatrixTopNControlRequestedSize;
    int32_t   alMatrixTopNControlGrantedSize;
    uint32_t  alMatrixTopNControlStartTime;
    u_char    alMatrixTopNControlOwner[127];
    size_t    _alMatrixTopNControlOwnerLength;
    int32_t   alMatrixTopNControlStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct alMatrixTopNControlEntry *_nextPtr;	/* pointer to next table entry */
} alMatrixTopNControlEntry_t;

extern int
read_alMatrixTopNControlEntry(alMatrixTopNControlEntry_t *alMatrixTopNControlEntry);

extern int
register_alMatrixTopNControlEntry();

typedef struct alMatrixTopNEntry {
    int32_t   alMatrixTopNIndex;
    int32_t   alMatrixTopNProtocolDirLocalIndex;
    u_char    alMatrixTopNSourceAddress[65535];
    size_t    _alMatrixTopNSourceAddressLength;
    u_char    alMatrixTopNDestAddress[65535];
    size_t    _alMatrixTopNDestAddressLength;
    int32_t   alMatrixTopNAppProtocolDirLocalIndex;
    uint32_t  alMatrixTopNPktRate;
    uint32_t  alMatrixTopNReversePktRate;
    uint32_t  alMatrixTopNOctetRate;
    uint32_t  alMatrixTopNReverseOctetRate;
    void      *_clientData;		/* pointer to client data structure */
    struct alMatrixTopNEntry *_nextPtr;	/* pointer to next table entry */
} alMatrixTopNEntry_t;

extern int
read_alMatrixTopNEntry(alMatrixTopNEntry_t *alMatrixTopNEntry);

extern int
register_alMatrixTopNEntry();

typedef struct usrHistoryControlEntry {
    int32_t   usrHistoryControlIndex;
    int32_t   usrHistoryControlObjects;
    int32_t   usrHistoryControlBucketsRequested;
    int32_t   usrHistoryControlBucketsGranted;
    int32_t   usrHistoryControlInterval;
    u_char    usrHistoryControlOwner[127];
    size_t    _usrHistoryControlOwnerLength;
    int32_t   usrHistoryControlStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct usrHistoryControlEntry *_nextPtr;	/* pointer to next table entry */
} usrHistoryControlEntry_t;

extern int
read_usrHistoryControlEntry(usrHistoryControlEntry_t *usrHistoryControlEntry);

extern int
register_usrHistoryControlEntry();

typedef struct usrHistoryObjectEntry {
    int32_t   usrHistoryObjectIndex;
    uint32_t  usrHistoryObjectVariable[128];
    size_t    _usrHistoryObjectVariableLength;
    int32_t   usrHistoryObjectSampleType;
    void      *_clientData;		/* pointer to client data structure */
    struct usrHistoryObjectEntry *_nextPtr;	/* pointer to next table entry */
} usrHistoryObjectEntry_t;

extern int
read_usrHistoryObjectEntry(usrHistoryObjectEntry_t *usrHistoryObjectEntry);

extern int
register_usrHistoryObjectEntry();

typedef struct usrHistoryEntry {
    int32_t   usrHistorySampleIndex;
    uint32_t  usrHistoryIntervalStart;
    uint32_t  usrHistoryIntervalEnd;
    uint32_t  usrHistoryAbsValue;
    int32_t   usrHistoryValStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct usrHistoryEntry *_nextPtr;	/* pointer to next table entry */
} usrHistoryEntry_t;

extern int
read_usrHistoryEntry(usrHistoryEntry_t *usrHistoryEntry);

extern int
register_usrHistoryEntry();

typedef struct probeConfig {
    u_char    probeCapabilities[4];
    size_t    _probeCapabilitiesLength;
    u_char    probeSoftwareRev[15];
    size_t    _probeSoftwareRevLength;
    u_char    probeHardwareRev[31];
    size_t    _probeHardwareRevLength;
    u_char    probeDateTime[11];
    size_t    _probeDateTimeLength;
    int32_t   probeResetControl;
    u_char    probeDownloadFile[127];
    size_t    _probeDownloadFileLength;
    u_char    probeDownloadTFTPServer[4];
    size_t    _probeDownloadTFTPServerLength;
    int32_t   probeDownloadAction;
    int32_t   probeDownloadStatus;
    u_char    netDefaultGateway[4];
    size_t    _netDefaultGatewayLength;
    void      *_clientData;		/* pointer to client data structure */
} probeConfig_t;

extern int
read_probeConfig(probeConfig_t *probeConfig);

extern int
register_probeConfig();

typedef struct serialConfigEntry {
    int32_t   serialMode;
    int32_t   serialProtocol;
    int32_t   serialTimeout;
    u_char    serialModemInitString[255];
    size_t    _serialModemInitStringLength;
    u_char    serialModemHangUpString[255];
    size_t    _serialModemHangUpStringLength;
    u_char    serialModemConnectResp[255];
    size_t    _serialModemConnectRespLength;
    u_char    serialModemNoConnectResp[255];
    size_t    _serialModemNoConnectRespLength;
    int32_t   serialDialoutTimeout;
    int32_t   serialStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct serialConfigEntry *_nextPtr;	/* pointer to next table entry */
} serialConfigEntry_t;

extern int
read_serialConfigEntry(serialConfigEntry_t *serialConfigEntry);

extern int
register_serialConfigEntry();

typedef struct netConfigEntry {
    u_char    netConfigIPAddress[4];
    size_t    _netConfigIPAddressLength;
    u_char    netConfigSubnetMask[4];
    size_t    _netConfigSubnetMaskLength;
    int32_t   netConfigStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct netConfigEntry *_nextPtr;	/* pointer to next table entry */
} netConfigEntry_t;

extern int
read_netConfigEntry(netConfigEntry_t *netConfigEntry);

extern int
register_netConfigEntry();

typedef struct trapDestEntry {
    int32_t   trapDestIndex;
    u_char    trapDestCommunity[127];
    size_t    _trapDestCommunityLength;
    int32_t   trapDestProtocol;
    u_char    trapDestAddress[65535];
    size_t    _trapDestAddressLength;
    u_char    trapDestOwner[127];
    size_t    _trapDestOwnerLength;
    int32_t   trapDestStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct trapDestEntry *_nextPtr;	/* pointer to next table entry */
} trapDestEntry_t;

extern int
read_trapDestEntry(trapDestEntry_t *trapDestEntry);

extern int
register_trapDestEntry();

typedef struct serialConnectionEntry {
    int32_t   serialConnectIndex;
    u_char    serialConnectDestIpAddress[4];
    size_t    _serialConnectDestIpAddressLength;
    int32_t   serialConnectType;
    u_char    serialConnectDialString[255];
    size_t    _serialConnectDialStringLength;
    u_char    serialConnectSwitchConnectSeq[255];
    size_t    _serialConnectSwitchConnectSeqLength;
    u_char    serialConnectSwitchDisconnectSeq[255];
    size_t    _serialConnectSwitchDisconnectSeqLength;
    u_char    serialConnectSwitchResetSeq[255];
    size_t    _serialConnectSwitchResetSeqLength;
    u_char    serialConnectOwner[127];
    size_t    _serialConnectOwnerLength;
    int32_t   serialConnectStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct serialConnectionEntry *_nextPtr;	/* pointer to next table entry */
} serialConnectionEntry_t;

extern int
read_serialConnectionEntry(serialConnectionEntry_t *serialConnectionEntry);

extern int
register_serialConnectionEntry();


typedef struct rmon2_mib {
    etherStats2Entry_t	*etherStats2Entry;
    tokenRingMLStats2Entry_t	*tokenRingMLStats2Entry;
    tokenRingPStats2Entry_t	*tokenRingPStats2Entry;
    historyControl2Entry_t	*historyControl2Entry;
    hostControl2Entry_t	*hostControl2Entry;
    matrixControl2Entry_t	*matrixControl2Entry;
    channel2Entry_t	*channel2Entry;
    filter2Entry_t	*filter2Entry;
    ringStationControl2Entry_t	*ringStationControl2Entry;
    sourceRoutingStats2Entry_t	*sourceRoutingStats2Entry;
    protocolDir_t	protocolDir;
    protocolDirEntry_t	*protocolDirEntry;
    protocolDistControlEntry_t	*protocolDistControlEntry;
    protocolDistStatsEntry_t	*protocolDistStatsEntry;
    addressMap_t	addressMap;
    addressMapControlEntry_t	*addressMapControlEntry;
    addressMapEntry_t	*addressMapEntry;
    hlHostControlEntry_t	*hlHostControlEntry;
    nlHostEntry_t	*nlHostEntry;
    hlMatrixControlEntry_t	*hlMatrixControlEntry;
    nlMatrixSDEntry_t	*nlMatrixSDEntry;
    nlMatrixDSEntry_t	*nlMatrixDSEntry;
    nlMatrixTopNControlEntry_t	*nlMatrixTopNControlEntry;
    nlMatrixTopNEntry_t	*nlMatrixTopNEntry;
    alHostEntry_t	*alHostEntry;
    alMatrixSDEntry_t	*alMatrixSDEntry;
    alMatrixDSEntry_t	*alMatrixDSEntry;
    alMatrixTopNControlEntry_t	*alMatrixTopNControlEntry;
    alMatrixTopNEntry_t	*alMatrixTopNEntry;
    usrHistoryControlEntry_t	*usrHistoryControlEntry;
    usrHistoryObjectEntry_t	*usrHistoryObjectEntry;
    usrHistoryEntry_t	*usrHistoryEntry;
    probeConfig_t	probeConfig;
    serialConfigEntry_t	*serialConfigEntry;
    netConfigEntry_t	*netConfigEntry;
    trapDestEntry_t	*trapDestEntry;
    serialConnectionEntry_t	*serialConnectionEntry;
} rmon2_mib_t;

#endif /* _RMON2_MIB_H_ */
