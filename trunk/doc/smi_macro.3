.\"
.\" $Id$
.\"
.TH smi_macro 3  "May 5, 1999" "IBR" "SMI Management Information Library"
.SH NAME
smiGetMacro, smiFreeMacro \- SMI statement information routines
.SH SYNOPSIS
.nf
.B #include <smi.h>
.RS
.RE
.sp
.BI "SmiMacro *smiGetMacro(char *" spec ", char *" mod );
.RE
.sp
.BI "void smiFreeMacro(SmiMacro *" smiMacroPtr );
.RE

typedef struct SmiMacro {
    char                *name;
    char                *module;
} SmiMacro;

.fi
.SH DESCRIPTION
These functions retrieve information on an extension statement
definition (SMIng) or a macro (SMIv1/v2).
.PP
The \fBsmiGetMacro()\fP function retrieves a \fBstruct SmiMacro\fP that
represents an extension or macro definition. Either \fIspec\fP must be the
fully qualified descriptor leaving \fImod\fP NULL, or the name is
split into the module \fImod\fP and descriptor \fIspec\fP.
.PP
The \fBsmiFreeMacro()\fP function should be called when a retrieved
\fBstruct SmiMacro\fP is no longer needed to release its memory.
.SH "RETURN VALUES"
The retrieval function \fBsmiGetMacro()\fP returns the requested
\fBstruct smiMacro\fP on success, or NULL on error. Structures should
be released after use by calling \fBsmiFreeMacro()\fP which is a void
function.
.SH "FILES"
.nf
/usr/local/include/smi.h    SMI library header file
.fi
.SH "NOTES"
Libsmi is work in progress. Interface inconsistencies and deficiencies
will be removed in near future.
.SH "SEE ALSO"
.BR libsmi "(3), "
.BR smi.h
.SH "AUTHOR"
Frank Strauss <strauss@ibr.cs.tu-bs.de>
.br
