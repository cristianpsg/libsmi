/*
 * smi.h-add --
 *
 *      Additions to smi.h which are not RPC but libsmi API specific.
 *
 * Copyright (c) 1998 Technical University of Braunschweig.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * @(#) $Id: smi.h-add,v 1.1 1998/11/10 20:25:46 strauss Exp $
 */

#ifndef _SMI_H_ADD
#define _SMI_H_ADD

#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>

#define SMI_ERRORS      0x1000
#define SMI_ERRORLINES  0x2000
#define SMI_STATS       0x4000
#define SMI_RECURSIVE   0x8000
#define SMI_FLAGMASK    (SMI_STATS|SMI_RECURSIVE|SMI_ERRORS|SMI_ERRORLINES)



extern void smiInit();

extern void smiSetDebugLevel(int level);

extern void smiSetErrorLevel(int level);

extern void smiSetFlags(int userflags);

extern int smiReadConfig(const char *file);

extern int smiAddLocation(const char *location);

extern int smiLoadMibModule(const char *modulename);

/*
 * Functions similar to those in smi.x.
 *
 * Where the RPC calls expect fullnames, here the `name' argument may
 * be the single descriptor name and the `module' may contain the
 * module name. Otherwise, when `name' contains the whole name in the
 * form `Module.Descriptor', `module' has to be NULL.
 */

extern smi_module *smiGetModule(smi_descriptor name,
			       int wantdescr);

extern smi_node *smiGetNode(smi_fullname name,
			    smi_descriptor module,
			    int wantdescr);

extern smi_type *smiGetType(smi_fullname name,
			    smi_descriptor module,
			    int wantdescr);

extern smi_macro *smiGetMacro(smi_fullname name,
			      smi_descriptor module);

extern smi_namelist *smiGetNames(smi_fullname name,
				 smi_descriptor module);

extern smi_namelist *smiGetChildren(smi_fullname name,
				    smi_descriptor module);

extern smi_namelist *smiGetMembers(smi_fullname name,
				   smi_descriptor module);

extern smi_fullname *smiGetParent(smi_fullname name,
				  smi_descriptor module);

/*
 * TODO: status and (cache-)config functions ?
 */

#endif /* _SMI_H_ADD */
