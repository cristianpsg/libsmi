.\"
.\" $Id: smi_config.3,v 1.1 1999/05/28 14:52:06 strauss Exp $
.\"
.TH smi_config 3  "June 1, 1999" "IBR" "SMI Management Information Library"
.SH NAME
smiInit, smiSetErrorLevel, smiGetFlags, smiSetFlags,
smiLoadModule \- SMI library
configuration routines
.SH SYNOPSIS
.nf
.B #include <smi.h>
.RS
.RE
.sp
.BI "void smiInit();"
.RE
.sp
.BI "void smiSetErrorLevel(int " level );
.RE
.sp
.BI "int smiGetFlags();"
.RE
.sp
.BI "void smiSetFlags(int " userflags );
.RE
.sp
.BI "int smiLoadModule(char *" module );
.RE
.fi
.SH DESCRIPTION
These functions provide some initialization and adjustment operations
for the SMI library.
.PP
The \fBsmiInit()\fP function should be the first SMI function called
in an application. It initializes its internal structures.
.PP
The \fBsmiSetErrorLevel()\fP function sets the pedantic level (0-9) of
the SMI parsers of the SMI library, currently SMIv1/v2 and SMIng
(which might, but should not be turned off at library compile
time). The higher the level, the louder it complains. Values up to 3
should be regarded as errors, higher level could be interpreted as
warnings.  But note that this classification is some kind of personal
taste.  The default level is 0, since usually only MIB checkers want
to tune a higher level.
.PP
The \fBsmiGetFlags()\fP and \fBsmiSetFlags()\fP functions allow to
fetch, modify, and set some \fIuserflags\fP that control the SMI
library's behaviour.  If \fBSMI_ERRORS\fP is not set, no error messages
are printed at all to keep the SMI library totally quiet, which might
be mandatory for some applications. If \fBSMI_ERRORLINES\fP is set and
an error is printed, it is followed by two lines: the current source
module line and a second line that marks the current point in the line
above. If \fBSMI_STATS\fP is set and the error level is 9, the
library prints some module statistics. If \fBSMI_RECURSIVE\fP is set,
the library also complains about errors in modules that are read due
to import statements.
.PP
The \fBsmiLoadModule()\fP function specifies an additional MIB module by
\fImodule\fP that the application claims to know. Only after a
module is made known through this function, iterating retrieval
functions and retrieval functions without fully qualified identifiers
will return results from this module.
.SH "RETURN VALUES"
The function \fBsmiLoadModule()\fP returns 0 on success, or negative values on
error. \fBsmiGetFlags()\fP returns the current set of flags. The
other functions are void.
.SH "MODULE LOCATIONS"
The SMI library may retrieve MIB modules from different kinds of
resources. Currently, SMIv1/v2 and SMIng module files are supported.
If in an \fBsmiLoadModule()\fP function call a module is specified by
a path name (identified by containing at least one dot or slash character),
this
is assumed to be the exact file to read. Otherwise, if a module is identified
by its plain module name, the correspondant file (either SMIv1/2 or
SMIng) is searched along a path, which is initialized by the \fBSMIPATH\fP
environment variable or by
/usr/local/lib/smi if \fBSMIPATH\fP is not set. Files with a \fB.sming\fP
extension are expected to be SMIng module files. Files with a \fB.my\fP or
without any extension are expected to be SMIv1/v2 module files.
.SH "FILES"
.nf
/usr/local/include/smi.h    SMI library header file
/usr/local/lib/smi/	  SMI module repository directory
.fi
.SH "SEE ALSO"
.BR libsmi "(3), "
.BR smi.h
.SH "AUTHOR"
(C) 1999 Frank Strauss, TU Braunschweig, Germany <strauss@ibr.cs.tu-bs.de>
.br
