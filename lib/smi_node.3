.\"
.\" $Id: smi_node.3,v 1.4 1999/05/07 07:57:13 strauss Exp $
.\"
.TH smi_node 3  "May 5, 1999" "IBR" "SMI Management Information Library"
.SH NAME
smiGetNode, smiGetFirstNode, smiGetNextNode, smiFreeNode \- SMI type
information routines
.SH SYNOPSIS
.nf
.B #include <smi.h>
.RS
.RE
.sp
.BI "SmiNode *smiGetNode(char *" spec ", char *" mod );
.RE
.sp
.BI "SmiNode *smiGetFirstNode(char *" modulename );
.RE
.sp
.BI "SmiNode *smiGetNextNode(char *" modulename ", char *" name );
.RE
.sp
.BI "void smiFreeNode(SmiNode *" smiNodePtr );
.RE

typedef struct SmiNode {
    char                *name;
    char                *module;
    SmiObjectIdentifier oid;          /* dotted string */
    char                *type;        /* fully qualified */
    char                **list;       /* depends on kind of node */
    SmiIndexkind        indexkind;    
    int                 implied;
    char                **index;
    char                *relatedrow;
    SmiOption           **option;     /* only compliance nodes */
    SmiRefinement       **refinement; /* only compliance nodes */
    SmiDecl             decl;
    SmiBasetype         basetype;
    SmiAccess           access;
    SmiStatus           status;
    char                *format;
    SmiValue            *value;
    char                *units;
    char                *description;
    char                *reference;
} SmiNode;

.fi
.SH DESCRIPTION
These functions retrieve information on any node definition in the
object identifier tree, these are ASN.1 object identifier assignments,
MODULE-IDENTITYs, OBJECT-IDENTITYs, OBJECT-TYPEs, NOTIFICATION-TYPEs,
TRAP-TYPEs, OBJECT-GROUPs, NOTIFICATION-GROUPs, MODULE-COMPLIANCEs,
and AGENT-CAPABILITYs in SMIv1/v2 and module, node, scalar, table,
row, column, notification, group, and compliance statements in SMIng.
.PP
The \fBsmiGetNode()\fP function retrieves a \fBstruct SmiNode\fP that
represents a node of any kind. Either \fIspec\fP must be the fully
qualified descriptor leaving \fImod\fP NULL, or the name is split into
the module \fImod\fP and descriptor \fIspec\fP.  Elements not
available or not present in the definition contain NULL. See
\fBsmi.h\fP for the structure of contained elements.
.PP
The \fBsmiGetFirstNode()\fP and \fBsmiGetNextNode()\fP functions are
used to iteratively retrieve \fBstruct SmiNode\fPs.
\fBsmiGetFirstNode()\fP returns the first node defined in module
\fImodulename\fP with respect to an object identifier tree in
pre-order (thus not necessarily the first defined in the MIB module).
Subsequent calls to \fBsmiGetNextNode()\fP return the next node after
that one specified by \fIname\fP which is usually the \fBname\fP
element of the last returned \fBstruct SmiNode\fP. If there are no
more node definitions in the module NULL is returned.
.PP
The \fBsmiFreeNode()\fP function should be called when a retrieved
\fBstruct SmiNode\fP is no longer needed to release its memory.
.SH "RETURN VALUES"
The retrieval functions \fBsmiGetNode()\fP, \fBsmiGetFirstNode()\fP,
and \fBsmiGetNextNode()\fP return the requested \fBstruct smiNode\fP
on success, or NULL on error. Structures should be released after use
by calling \fBsmiFreeNode()\fP which is a void function.
.SH "FILES"
.nf
/usr/local/include/smi.h    SMI library header file
.fi
.SH "NOTES"
Libsmi is work in progress. Interface inconsistencies and deficiencies
will be removed in near future.
.SH "SEE ALSO"
.BR libsmi "(3), "
.BR smi.h
.SH "AUTHOR"
(C) 1999 Frank Strauss, TU Braunschweig, Germany <strauss@ibr.cs.tu-bs.de>
.br
