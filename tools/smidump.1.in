.\"
.\" $Id: smidump.1.in,v 1.10 2000/05/20 12:51:11 strauss Exp $
.\"
.TH smidump 1  "August 18, 2000" "IBR" "SMI Tools"
.SH NAME
smidump \- dump SMI modules in various formats
.SH SYNOPSIS
.B smidump
[
.B "-Vhsu"
] [
.BI "-c " configfile
] [
.BI "-p " module
] [
.BI "-l " level
] [
.BI "-f " format
]
.I "module(s)"
.SH DESCRIPTION
The \fBsmidump\fP program is used to dump the contents of a single MIB
module or a collection of modules to stdout in a selectable output
format.  This format may be a simple tree of nodes, types or imported
modules, but also a format fully compliant to SMIv1, SMIv2 or SMIng or
CORBA IDL or C source code. Smidump can thus be used to convert
modules from SMIv2 to SMIng and from SMIng to SMIv2, or to develop
template based agent code.
.SH OPTIONS
.TP
.B "-V"
Show the smidump version and exit.
.TP
.B "-h"
Show a help text and exit. The help text contains a list of all
supported output formats.
.TP
.BI "-c " configfile
Read \fIconfigfile\fP instead of any other (global and user)
configuration file.
.TP
.BI "-f " format
Use \fIformat\fP when dumping a module. Supported output formats are described 
below. The default output format is SMIng. The \fIformat\fP argument is
case insensitive.
.TP
.BI "-l " level
Report errors and warnings up to the given \fIlevel\fP.
A higher level shows more warnings. The actual levels are:
.sp
.nf
 0   internal error, no recovery possible,
 1   major SMI error, recovery somehow possible but
     may lead to severe problems,
 2   SMI error, probably tolerated by some
     implementations,
 3   SMI error, tolerated by many implementations,
 4   something which is recommended to be changed,
 5   something that might be ok, but might not be
     recommended under some circumstances,
 6   just a notice.
.fi
.sp
Higher levels are actually not used and lead to the same effects as
level 6 does. Note that errors up to level 3 are errors violating the
specification and must be fixed by the responsible author. Level 3 is
the default level.
.TP
.BI "-p " module
Preload the module \fImodule\fP before reading the main module(s). This may
be helpful if an incomplete main module misses to import some definitions.
.TP
.B "-s"
Suppress comments from dumped modules. What kind of information
gets suppressed depends on the output format.
.TP
.B "-u"
Dump a unified output in case of multiple \fImodule(s)\fP instead of
multiple concatenated output sections. This is not supported for all
output formats.
.TP
.I module(s)
These are the module(s) to be dumped. If a module argument represents a
path name (identified by containing at least one dot or slash character),
this is assumed to be the exact file to read. Otherwise, if a module is
identified by its plain module name, it is searched according to libsmi
internal rules. See \fBsmi_config(3)\fP for more details.
.SH "OUTPUT FORMATS"
The \fBsmidump\fP program supports the following output formats:
.TP 12
sming
SMIng compliant format as defined in the SMIng Internet-Draft.
.TP
smiv2
SMIv2 compliant format as defined in RFC 2578, RFC 2579, RFC 2580.
.TP
smiv1
SMIv2 compliant format as defined in RFC 1155, RFC 1212, RFC 1215.
.TP
mosy
Format generated by the mosy compiler.
.TP
imports
Import hierarchy of a MIB module.
.TP
types
Types defined in a MIB module.
.TP
tree
OID tree structure of a MIB module.
.TP
identifiers
A simple list of all node (and type ?) identifiers.
.TP
corba-idl
CORBA IDL definitions following the JIDM specification translation
rules.
.TP
corba-oid
CORBA OID definitions following the JIDM specification translation
rules.
.TP
ucd-h
C source code header file for usage within the UCD SNMP agent (experimental).
.TP
ucd-c
C source code file for usage within the UCD SNMP agent (experimental).
.TP
cn-dia
Reverse engineered conceptual model in DIA XML file format (experimental).
.TP
cn-xplain
Details about the reverse engineering process (experimental).
.TP
jax
Java AgentX sub-agent classes in separate files (experimental).
.TP
xml
SMI in XML format (experimental).
.TP
metrics
Metrics derived from a MIB module (experimental).

.SH "EXAMPLE"
This example converts the SMIv2 module IF-MIB in the current directory
to IF-MIB.sming in SMIng format. Note that the ./ prefix is used to
ensure reading the module from the current directory and not from a
place that libsmi guesses on its own.
.nf

  $ smidump -f sming ./IF-MIB > IF-MIB.sming
.fi
.SH "SEE ALSO"
The
.BR libsmi (3)
project is documented at
.BR "http://www.ibr.cs.tu-bs.de/projects/libsmi/" "."
.PP
.BR smilint "(1)"
.SH "AUTHOR"
(C) 1999,2000 Frank Strauss, TU Braunschweig, Germany <strauss@ibr.cs.tu-bs.de>
.br
