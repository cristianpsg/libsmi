.\"
.\" $Id: smilint.1.in,v 1.6 2000/02/12 14:31:55 strauss Exp $
.\"
.TH smilint 1  "February 11, 2000" "IBR" "SMI Tools"
.SH NAME
smilint \- syntax and semantic checks of SMIv1/v2/ng modules
.SH SYNOPSIS
.B smilint
[
.B "-Vhsr"
] [
.BI "-c " configfile
] [
.BI "-p " module
] [
.BI "-l " level
] [
.BI "-i " error-pattern
]
.I "module(s)"
.SH DESCRIPTION
The \fBsmilint\fP program is used to check MIB modules for syntax
errors and semantics at some degree.  Both, SMIv1/v2 and SMIng style
MIB modules are supported.
.PP
The rules that \fBsmilint\fP is based on are taken from RFC 1155, RFC
1212 and RFC 1215 for SMIv1, RFCs 2578-2580 for SMIv2 and the
specification of SMIng that is work in progress within the Network Management
Research Group of the IRTF.
.SH OPTIONS
.TP
.B "-V"
Show the smilint version and exit.
.TP
.B "-h"
Show a help text and exit.
.TP
.B "-s"
Report some per module statistics to stderr.
.TP
.B "-r"
Report errors and warnings also for recursively imported modules.
.TP
.BI "-c " configfile
Read \fIconfigfile\fP instead of any other (global and user)
configuration file.
.TP
.BI "-p " module
Preload the module \fImodule\fP before reading the main
module(s). This may be helpful if an incomplete main module misses to
import some definitions.
.TP
.BI "-l " level
Report errors and warnings up to the given severity \fIlevel\fP,
i.e. a higher level shows more warnings. The actual severities are:
.sp
.nf
 0   internal error, no recovery possible,
 1   major SMI error, recovery somehow possible but
     may lead to severe problems,
 2   SMI error, probably tolerated by some
     implementations,
 3   SMI error, tolerated by many implementations,
 4   something which is recommended to be changed,
 5   something that might be ok, but might not be
     recommended under some circumstances,
 6   just a notice.
.fi
.sp
Higher levels are currently not used and lead to the same effects as
level 6 does. Note that errors up to level 3 are errors violating the
specifications and must be fixed by the responsible author. Level 3 is
the default level.
.TP
.BI "-i " error-pattern
ignore all errors that have a prefix that matches \fIerror-pattern\fP.
[Currently, there is no way to list the error names. RTFS: error.c.]
.TP
.I module(s)
These are the modules to be checked. If a module argument represents a
path name (identified by containing at least one dot or slash character),
this is assumed to be the exact file to read. Otherwise, if a module is
identified by its plain module name, it is searched according to libsmi
internal rules. See \fBsmi_config(3)\fP for more details.
.SH "EXAMPLE"
This example checks the file RMON2-MIB in the current directory (note
that the `./' prefix ensures this). The error level is raised to 6
and warnings that claim about identifier names that exceed a length
of 32 characters are suppressed.
.nf

  $ smilint -l 6 -i namelength-32 ./RMON2-MIB
  ./RMON2-MIB:3935: Unexpected type restriction
  ./RMON2-MIB:3936: Unexpected type restriction
  ./RMON2-MIB:3937: Unexpected type restriction
  ./RMON2-MIB:3938: Unexpected type restriction
  ./RMON2-MIB:3939: Unexpected type restriction
  ./RMON2-MIB:3940: Unexpected type restriction
  ./RMON2-MIB:4164: Scalar object must not have a `read-create' access value

.fi
.SH "SEE ALSO"
The 
.BR libsmi (3)
project is documented at
.BR "http://www.ibr.cs.tu-bs.de/projects/libsmi/" "."
Other commonly used MIB checkers are
.BR mosy "(1) and "
.BR smicng "(1)."
.SH "AUTHOR"
(C) 1999,2000 Frank Strauss, TU Braunschweig, Germany <strauss@ibr.cs.tu-bs.de>
.br
