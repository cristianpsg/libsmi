/*
 * This C header file has been generated by smidump 0.2.11.
 * It is intended to be used with the NET SNMP agent.
 *
 * This header is derived from the IF-MIB module.
 *
 * $Id$
 */

#ifndef _IF_MIB_H_
#define _IF_MIB_H_

#include <stdlib.h>

#ifdef HAVE_STDINT_H
#include <stdint.h>
#endif

/*
 * Initialization function:
 */

void init_if_mib(void);

/*
 * Structures for groups of scalars and table entries:
 */

typedef struct interfaces {
    int32_t   ifNumber;
    void      *_clientData;		/* pointer to client data structure */
} interfaces_t;

extern int
read_interfaces(interfaces_t *interfaces);

extern int
register_interfaces();

typedef struct ifEntry {
    int32_t   ifIndex;
    u_char    ifDescr[255];
    size_t    _ifDescrLength;
    int32_t   ifType;
    int32_t   ifMtu;
    uint32_t  ifSpeed;
    u_char    ifPhysAddress[65535];
    size_t    _ifPhysAddressLength;
    int32_t   ifAdminStatus;
    int32_t   ifOperStatus;
    uint32_t  ifLastChange;
    uint32_t  ifInOctets;
    uint32_t  ifInUcastPkts;
    uint32_t  ifInNUcastPkts;
    uint32_t  ifInDiscards;
    uint32_t  ifInErrors;
    uint32_t  ifInUnknownProtos;
    uint32_t  ifOutOctets;
    uint32_t  ifOutUcastPkts;
    uint32_t  ifOutNUcastPkts;
    uint32_t  ifOutDiscards;
    uint32_t  ifOutErrors;
    uint32_t  ifOutQLen;
    uint32_t  ifSpecific[128];
    size_t    _ifSpecificLength;
    void      *_clientData;		/* pointer to client data structure */
    struct ifEntry *_nextPtr;	/* pointer to next table entry */
} ifEntry_t;

extern int
read_ifEntry(ifEntry_t *ifEntry);

extern int
register_ifEntry();

typedef struct ifMIBObjects {
    uint32_t  ifTableLastChange;
    uint32_t  ifStackLastChange;
    void      *_clientData;		/* pointer to client data structure */
} ifMIBObjects_t;

extern int
read_ifMIBObjects(ifMIBObjects_t *ifMIBObjects);

extern int
register_ifMIBObjects();

typedef struct ifXEntry {
    u_char    ifName[255];
    size_t    _ifNameLength;
    uint32_t  ifInMulticastPkts;
    uint32_t  ifInBroadcastPkts;
    uint32_t  ifOutMulticastPkts;
    uint32_t  ifOutBroadcastPkts;
    /* add code to return the value here */
    /* add code to return the value here */
    /* add code to return the value here */
    /* add code to return the value here */
    /* add code to return the value here */
    /* add code to return the value here */
    /* add code to return the value here */
    /* add code to return the value here */
    int32_t   ifLinkUpDownTrapEnable;
    uint32_t  ifHighSpeed;
    int32_t   ifPromiscuousMode;
    int32_t   ifConnectorPresent;
    u_char    ifAlias[64];
    size_t    _ifAliasLength;
    uint32_t  ifCounterDiscontinuityTime;
    void      *_clientData;		/* pointer to client data structure */
    struct ifXEntry *_nextPtr;	/* pointer to next table entry */
} ifXEntry_t;

extern int
read_ifXEntry(ifXEntry_t *ifXEntry);

extern int
register_ifXEntry();

typedef struct ifStackEntry {
    int32_t   ifStackHigherLayer;
    int32_t   ifStackLowerLayer;
    int32_t   ifStackStatus;
    void      *_clientData;		/* pointer to client data structure */
    struct ifStackEntry *_nextPtr;	/* pointer to next table entry */
} ifStackEntry_t;

extern int
read_ifStackEntry(ifStackEntry_t *ifStackEntry);

extern int
register_ifStackEntry();

typedef struct ifTestEntry {
    int32_t   ifTestId;
    int32_t   ifTestStatus;
    uint32_t  ifTestType[128];
    size_t    _ifTestTypeLength;
    int32_t   ifTestResult;
    uint32_t  ifTestCode[128];
    size_t    _ifTestCodeLength;
    u_char    ifTestOwner[255];
    size_t    _ifTestOwnerLength;
    void      *_clientData;		/* pointer to client data structure */
    struct ifTestEntry *_nextPtr;	/* pointer to next table entry */
} ifTestEntry_t;

extern int
read_ifTestEntry(ifTestEntry_t *ifTestEntry);

extern int
register_ifTestEntry();

typedef struct ifRcvAddressEntry {
    u_char    ifRcvAddressAddress[65535];
    size_t    _ifRcvAddressAddressLength;
    int32_t   ifRcvAddressStatus;
    int32_t   ifRcvAddressType;
    void      *_clientData;		/* pointer to client data structure */
    struct ifRcvAddressEntry *_nextPtr;	/* pointer to next table entry */
} ifRcvAddressEntry_t;

extern int
read_ifRcvAddressEntry(ifRcvAddressEntry_t *ifRcvAddressEntry);

extern int
register_ifRcvAddressEntry();


typedef struct if_mib {
    interfaces_t	interfaces;
    ifEntry_t	*ifEntry;
    ifMIBObjects_t	ifMIBObjects;
    ifXEntry_t	*ifXEntry;
    ifStackEntry_t	*ifStackEntry;
    ifTestEntry_t	*ifTestEntry;
    ifRcvAddressEntry_t	*ifRcvAddressEntry;
} if_mib_t;

#endif /* _IF_MIB_H_ */
